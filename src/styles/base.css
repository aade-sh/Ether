:root {
  --main-bg-color: 45, 53, 59;
  --main-fg-color: 211, 198, 170;
  --main-accent: 138, 44, 32;
  --accent-1: 167, 192, 128;
  --accent-2: 230, 126, 128;
  --accent-3: 127, 187, 179;
  --accent-4: 214, 153, 182;
  --accent-5: 219, 188, 127;
  --border: 1px solid rgba(var(--main-fg-color), 0.6);
  --panel-opacity: 0.5;
}
html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  background: rgb(var(--main-bg-color));
}

body {
  color: rgb(var(--main-fg-color));
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100%;
  font-size: 10px;
  font-family: 'Roboto Mono', monospace;
  overflow: hidden;
}
@media screen and (min-width: 996px) {
  body {
    font-size: 13px;
  }
}
@media screen and (min-width: 1200px) {
  body {
    font-size: 16px;
  }
}

h2,
h3 {
  font-family: 'Roboto', sans-serif;
}

ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

a {
  text-decoration: none;
  color: inherit;
}
a:visited {
  color: inherit;
}

input {
  border: none;
  outline: none;
  background-color: transparent;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
  padding: 0;
  margin: 0;
}
input[type='file'] {
  display: none;
}

input[type='text'] {
  padding-left: 0.5em;
  padding-bottom: 1.3%;
  border-bottom: 1px solid rgba(var(--main-fg-color), 0.5);
}

select {
  border: none;
  outline: none;
  background: transparent;
  font-size: inherit;
  color: rgb(var(--main-fg-color));
  border: var(--border);
  padding: 0.3em 0.9em;
}

option {
  background-color: rgb(var(--main-bg-color));
  color: rgb(var(--main-fg-color));
}

svg {
  display: block;
}

button {
  border: none;
  outline: none;
  background-color: transparent;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
  padding: 0;
  margin: 0;
  cursor: pointer;
}

.container {
  width: 80%;
  padding-bottom: 5%;
  max-width: 1400px;
  position: relative;
  display: flex;
}

.right-section {
  flex: 1;
  display: flex;
  flex-direction: column;
  padding-top: 3%;
  padding-right: 6.7%;
}

.top-section {
  z-index: 2;
  display: flex;
  padding-left: 2.45%;
  padding-top: 2.45%;
  width: 100%;
  background: rgb(var(--main-bg-color));
  box-sizing: border-box;
}

.form-container {
  width: 100%;
  margin-bottom: 1.7%;
  margin-left: 5%;
  border-bottom: 1px solid rgb(var(--main-fg-color));
  position: relative;
  opacity: 0.5;
  padding-bottom: 1.3%;
  display: flex;
}
.search-form,
.url-form {
  width: 100%;
  position: relative;
  display: flex;
  column-gap: 1em;
  align-items: end;
}
.form-container:focus-within {
  opacity: 1;
}

.form-container input {
  bottom: 0;
  width: 100%;
  padding: 0;
  border: none;
}

/* hero pattern by Steve Schoger from https://heropatterns.com/ */
.squiggly {
  background-color: rgb(var(--main-bg-color));
  background-image: url('/src/assets/squiggly-pattern.svg');
  transform: rotate(45deg);
  position: relative;
  animation: wavy 10s infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}
@keyframes wavy {
  0% {
    transform: translate(0, 0) rotate(45deg);
  }
  100% {
    transform: translate(5em, 5em) rotate(45deg);
  }
}

.hide {
  opacity: 0;
  position: absolute;
  pointer-events: none;
}
.removed {
  display: none !important;
}

.inactive {
  opacity: 0.5;
  pointer-events: none;
}

button[name='settings'] {
  position: absolute;
  bottom: 2vw;
  right: 2vw;
  filter: brightness(0.5);
}
button[name='settings']:hover {
  filter: brightness(1);
  animation: rotate;
  animation-duration: 10s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}
@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

input:placeholder-shown {
  font-style: italic;
  font-weight: 200;
}

.btn-ctn {
  display: flex;
  align-items: center;
  column-gap: 2em;
}
.outline-button {
  display: block;
  position: relative;
}
.outline-button .button-text {
  padding: 0.3em 0.9em;
  border: var(--border);
  transform: translate(0em, 0em);
  background: rgb(var(--main-bg-color));
  position: relative;
  z-index: 2;
}
.outline-button .border {
  border: var(--border);
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}
.outline-button:hover .button-text {
  transform: translate(0.3em, -0.3em);
}

.underline-anime {
  position: relative;
  overflow: hidden;
}
.underline-anime:after {
  content: '';
  transition: transform 0.1s ease-out;
  position: absolute;
  bottom: -0.1em;
  left: -0.7em;
  width: 100%;
  height: 0.5em;
  background-color: rgb(var(--main-accent));
  z-index: -1;
  transform: translateX(-100%);
}
.underline-anime:hover:after {
  transform: translateX(0);
}

.accordion {
  max-height: 0;
}

.link-wrapper .underline-link {
  width: max-content;
}
.underline-link {
  text-decoration: underline;
}

.error {
  outline: 2px solid red;
}

.triangle {
  aspect-ratio: 1/1;
  position: absolute;
  top: 47%;
  left: -15%;
  right: 0;
  bottom: 0;
  clip-path: polygon(100% 0, 0 15%, 68% 100%);
  width: 68%;
  transform: translateY(-50%);
  margin: 0 auto;
}
.triangle:nth-of-type(2) {
  top: 60%;
  left: -20%;
  opacity: 0.25;
  left: -40%;
  width: 55%;
}

.triangle:after {
  opacity: 0.4;
  background-size: 1em;
  background-image: linear-gradient(
      to right,
      rgb(var(--main-fg-color)) 1px,
      transparent 1px
    ),
    linear-gradient(to bottom, rgb(var(--main-fg-color)) 1px, transparent 1px);
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  content: '';
}
.triangle:nth-of-type(2):after {
  background-image: linear-gradient(
      to right,
      rgb(var(--main-accent)) 1px,
      transparent 1px
    ),
    linear-gradient(to bottom, rgb(var(--main-accent)) 1px, transparent 1px);
}
